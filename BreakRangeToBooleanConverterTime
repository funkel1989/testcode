public class BreakRangeToBooleanConverterTime : IValueConverter
    {
        public static readonly TimeSpan _toCompare = new TimeSpan(00, 15, 00);
        public object Convert(object value, Type targetType, object parameter, CultureInfo culture)
        {
            if (!(value is TimeSpan))
                return DependencyProperty.UnsetValue;
            return (TimeSpan)value > _toCompare;
        }       

        public object ConvertBack(object value, Type targetType, object parameter, CultureInfo culture)
        {
            throw new Exception("To Long On Break");
        }        
    }
    
    
    
    
    <DataGrid.Resources>

      <local:BreakRangeToBooleanConverterTime x:Key="Breakconvtime"/>
      
    </DataGrid.Resources>
    
    
    
    <MultiDataTrigger>

      <MultiDataTrigger.Conditions>

          <Condition Binding="{Binding AuxReasons}" Value="Break"/>

          <Condition Binding="{Binding Time, Converter={StaticResource Breakconvtime}}" Value="True"/>                                

      </MultiDataTrigger.Conditions>

      <Setter Property="Foreground" Value="Red"/>

      <Setter Property="Background" Value="SkyBlue"/>

  </MultiDataTrigger>
